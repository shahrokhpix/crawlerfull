version: '3.8'

services:
  farsnews-crawler:
    build:
      context: .
      dockerfile: Dockerfile
    image: farsnews-crawler:latest
    container_name: farsnews-crawler-prod
    restart: unless-stopped
    init: true
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - TZ=Asia/Tehran
    env_file:
      - .env
    volumes:
      # Persistent data storage
      - crawler-data:/app/data
      - crawler-logs:/app/logs
      # Read-only bind mounts for configuration
      - ./config:/app/config:ro
    tmpfs:
      - /tmp
    networks:
      - crawler-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3004/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Security options
    security_opt:
      - no-new-privileges:true
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Labels for monitoring
    labels:
      - "com.farsnews.service=crawler"
      - "com.farsnews.environment=production"
      - "com.farsnews.version=2.0.0"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: farsnews-nginx
    restart: unless-stopped
    init: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      farsnews-crawler:
        condition: service_healthy
    networks:
      - crawler-network
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
    profiles:
      - with-nginx

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: farsnews-prometheus
    restart: unless-stopped
    init: true
    user: "nobody"
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    networks:
      - crawler-network
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: farsnews-grafana
    restart: unless-stopped
    init: true
    user: "472"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      prometheus:
        condition: service_started
    networks:
      - crawler-network
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    profiles:
      - monitoring

networks:
  crawler-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  crawler-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data
  crawler-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/logs
  nginx-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local